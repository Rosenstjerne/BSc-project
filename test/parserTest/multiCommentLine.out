
.data
mmapEr:
                .string "mmap failed\n" # error message string for mmap

form:
                .string "%d\n"          # form string for C printf

formTrue:
                .string "true\n"        # form string for C printf

formFalse:
                .string "false\n"       # form string for C printf

.text

.globl main

main:

                                        # CALLEE PROLOGUE
                pushq %rbp              # save caller's base pointer
                movq %rsp, %rbp         # make stack pointer new base pointer

                addq $-24, %rsp         # allocate space for local variables


                movq %rsp, %rbx         # Saves stack pointer in %rbx
                addq $0, %rsp           # allocate space for extra intermediate
                                        # stack memory

                pushq %r8               # %r8 is callee save
                pushq %r9               # %r9 is callee save
                pushq %r10              # %r10 is callee save
                pushq %r11              # %r11 is callee save
                pushq %r12              # %r12 is callee save
                pushq %r13              # %r13 is callee save
                pushq %r14              # %r14 is callee save
                pushq %r15              # %r15 is callee save

                movq $0, -16(%rbp)      # Initializes b to 0
                movq $0, -8(%rbp)       # Initializes a to 0
                movq $0, -24(%rbp)      # Initializes c to 0
                movq $1, %r9            # Moves integer into reg1
                movq %rbp, %rdx         # preparing for static link computation
                movq %r9, -8(%rdx)      # Move param reg1 into ['fun_1_main',
                                        # 'var_0_a'] (a)
                movq $2, %r11           # Moves integer into reg3
                movq %rbp, %rdx         # preparing for static link computation
                movq %r11, -16(%rdx)    # Move param reg3 into ['fun_1_main',
                                        # 'var_1_b'] (b)
end_main:

                popq %r15               # restore callee save register %r15
                popq %r14               # restore callee save register %r14
                popq %r13               # restore callee save register %r13
                popq %r12               # restore callee save register %r12
                popq %r11               # restore callee save register %r11
                popq %r10               # restore callee save register %r10
                popq %r9                # restore callee save register %r9
                popq %r8                # restore callee save register %r8

                addq $0, %rsp           # deallocate stack space for extra
                                        # intermediate stack memory


                                        # CALLEE EPILOGUE
                movq %rbp, %rsp         # restore stack pointer
                popq %rbp               # restore base pointer
                ret                     # return from call

mmap_error:
                leaq mmapEr(%rip), %rdi # pass 1. arg in %rdi
                xor %rax, %rax          # no floating point arguments
                callq printf            # calls printf method

                movq $60, %rax          # prepare for exit syscall
                xor %rdi, %rdi          # exit status 0
                syscall                 # exit


